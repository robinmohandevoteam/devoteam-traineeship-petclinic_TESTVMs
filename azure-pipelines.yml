# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- task: InstallSSHKey@0
  displayName: 'Install an SSH key'
  inputs:
    knownHostsEntry: default
    sshPublicKey: '$(SSH_PUB_KEY)'
    sshKeySecureFile: robinmohandevoteamdevops

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.8.12'
    addToPath: true
    architecture: 'x64'

- script: |
   python -m pip install --upgrade pip
   pip install azure-cli
  displayName: 'Install Python plugins (for AZ CLI)'

- task: Bash@3
  displayName: AZ login
  inputs:
    targetType: 'inline'
    script: 'az login --service-principal -u d96286d0-548d-42bc-863d-d1764ab4b6ac -p 0yj7Q~lB90eRrKSMJR3DtPDWN2W-zdl54PKFi --tenant 16495547-537e-4dd0-8132-f2dc60e1a825'

# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'robinmohan-TFSPN'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: 'az login --service-principal -u d96286d0-548d-42bc-863d-d1764ab4b6ac -p 0yj7Q~lB90eRrKSMJR3DtPDWN2W-zdl54PKFi --tenant 16495547-537e-4dd0-8132-f2dc60e1a825'

- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    commandOptions: '-reconfigure'
    backendServiceArm: 'robinmohan-TFSPN'
    backendAzureRmResourceGroupName: 'pers-robin_mohan-rg'
    backendAzureRmStorageAccountName: 'storageforrobin'
    backendAzureRmContainerName: 'tstate'
    backendAzureRmKey: 'fWu4MDKgnyEOOE+xYzrd+zTHzKq0dsMNdDfKSJ6VMvYlOQhVWc4NamjpXUicPO6AM84AGtjWhBoqYpKUlnb/tA=='
- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    environmentServiceNameAzureRM: 'robinmohan-TFSPN'

- task: TerraformTaskV2@2
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    environmentServiceNameAzureRM: 'robinmohan-TFSPN'
  
# - task: Ansible@0
#   inputs:
#     ansibleInterface: 'agentMachine'
#     playbookPathOnAgentMachine: '$(System.DefaultWorkingDirectory)/ansible/installdocker.yml'
#     inventoriesAgentMachine: 'file'
#     inventoryFileOnAgentMachine: '$(System.DefaultWorkingDirectory)/ansible/ansible_azure_rm.yml'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'ansible --version'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'python --version'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'ansible-playbook -i ./ansible_azure_rm.yml installdocker.yml'
    workingDirectory: '$(System.DefaultWorkingDirectory)/ansible'